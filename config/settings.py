"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os

from .secret_keys import *
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = DJANGO_SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False
ALLOWED_HOSTS = ['127.0.0.1']
# ALLOWED_HOSTS = [
#     '172.31.39.39',
#     'poty.co.kr',
#     '.amazonaws.com',
#     '15.164.226.222',
# ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main_page', # 메인 페이지
    'accounts',
    'politic_info',
    'mathfilters',
    'board',
    'django_summernote',
    'storages',
    'django_crontab', # 스케쥴링
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

CRONJOBS = [
    ('30 00 * * *', 'public_function.cron.crontab_every_minute'), # 00시 30분에 실행
]

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST':'postgres.ctivlnnvzle4.ap-northeast-2.rds.amazonaws.com',
        'NAME': 'postgres',
        'USER': POSTGRESQL_ID,
        'PASSWORD': POSTGRESQL_SECRET_KEY,
        'PORT':'5432',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ko-KR'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True
# USE_TZ = False # 데이터베이스 시간 맞추기


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# STATIC_URL = '/static/'

# STATIC_ROOT = os.path.join(BASE_DIR, 'static_files') # js나 css를 장고가 자동저장해줄때

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static')
# ]

# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SESSION_EXPIRE_AT_BROWSER_CLOSE = True # 브라우저 종료 시 로그아웃

# 로그인 로그아웃 후 이전 페이지
TEMPLATE_CONTEXT_PROCESSORS = (
    "django.core.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
    "django.core.context_processors.request",
)


# Summernote 필수 설정
X_FRAME_OPTIONS = 'SAMEORIGIN'

# Summermote 선택 설정
SUMMERNOTE_THEME = 'bs4'

SUMMERNOTE_CONFIG = {
    'attachment_filesize_limit': 1024*1024*3,

    'summernote':{
            'placeholder': '내용을 입력해주세요.',
            'width': 840,
            'height': 500,
            'lang': 'ko-KR',
            'defaultFontName': '바탕',
            'toolbar': [
                ['style', ['style']],
                ['font', ['bold', 'italic', 'underline', 'superscript', 'subscript', 'strikethrough', 'clear']],
                ['fontname', ['fontname']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']],
                ['table', ['table']],
                ['insert', ['link', 'picture', 'hr']], # 여기 비디오 부분 제거됨
                ['view', ['fullscreen', 'help']]
            ],
            'defaultFontName':'바탕',
            'fontNames': ['Arial', 'Comic Sans MS','맑은 고딕','궁서','굴림','돋음체','바탕'],
            'fontSizes': ['8','9','10','11','12','14','16','18','20','22','24','28','30','36'],
        },
    }
# 배포시
CSRF_TRUSTED_ORIGINS = ['https://poty.co.kr']

# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_CONTENT_TYPE_NOSNIFF = True
# SECURE_BROWSER_XSS_FILTER = True
# SECURE_SSL_REDIRECT = False
# SESSION_COOKIE_SECURE = True

# SECURE_HSTS_PRELOAD = True

#AWS
DISQUS_WEBSITE_SHORTNAME = 'poty-user'
SITE_ID = 1

AWS_ACCESS_KEY_ID = ACCESS_KET_ID
AWS_SECRET_ACCESS_KEY = SECRET_ACCESS_KEY
AWS_REGION = 'ap-northeast-2'
AWS_STORAGE_BUCKET_NAME = 'poty'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.%s.amazonaws.com'%(AWS_STORAGE_BUCKET_NAME, AWS_REGION) # 나중에 도메인으로 변경

AWS_S3_FILE_OVERWRITE = False # 같은 파일이름 덮어쓰기 방지

AWS_QUERYSTRING_AUTH = True # ??

AWS_S3_OBJECT_PARAMETERS={ # 파일을 받았을때 캐시를 얼마나 유지할지 매번 새 파일 로드하면 오래걸리기 때문
    'CacheControl':'max-age=86400',
}
AWS_DEFAULT_ACL = None

AWS_LOCATION = 'static'

STATIC_URL = 'http://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION) # 추후 변경 https로

STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

DEFAULT_FILE_STORAGE = 'config.s3media.MediaStorage' # s3 미디어 파일 지정

STATIC_DIR = os.path.join(BASE_DIR, 'static') # js나 css를 장고가 자동저장해줄때, 서버 실행시 제거

STATICFILES_DIRS = [
    STATIC_DIR,
]

# MEDIA_ROOT = '/media'